Comentarios no codigo
Linhas = Alt + Shif + A
1 Linha Ctrl + ;
-----------------------------------------------------

 
Pesquisar o uso do bind dentro de classes
	bind, call, applay
 
Pesquisar
	estrutura do ES5 e ES6 

Pesquisar	
Operadores Unario





##########################################
		Livro Eloquente JS
###########################################
https://github.com/braziljs/eloquente-javascript



##########################################
#######			   #######
##########################################






#######################################
#######		Desconstructor		#######
#######################################

const pessoa = {
	nome: "Bruno"
	idade: 32
	uf: 'rj'
	logradouro: 'rua dos amigos'
}

const {nome, idade, logradouro: rua} = pessoa;



###################################
#######		Rest e Spread	#######
###################################
			
function nomeCompleto(nome, ...rest){
		
	arguments -> objeto que se parece com array

	...rest é um array com todos 
	os argumentos passados como paramentro da função.
}

nomeCompleto('Bruno', 32, '13985359741')




###################################
#######	Distancia e Dimenção ######
###################################

el.getBoudingClientRect() //top, width, height, x, y

el.offsetWidth
el.offsetHeight

el.scrollHeight
el.scrollWidth


###################################
#######			Windows		 ######
###################################

window.innerHeight
window.innerWidth
window.outterWidth
window.outterHeight




###################################
#######		Try e Catch	#######
###################################

Com Async Await o catch é uma função e recebe um parametro
	catch(erro){}
	
Com o Then o cacth é um método e recebe uma callback error
o catch((error)=>{error}); 



###################################
#######		Efeito Zoom	###########
###################################
https://www.youtube.com/watch?v=q_Blpa_2Z24&ab_channel=DankiCode



###################################
#######		Praticar JS		#######
###################################
Sites citados:
https://flexboxfroggy.com
https://www.w3schools.com/css/css_exercises.asp
https://www.codewell.cc/challenges
https://www.frontendmentor.io/challenges
https://devchallenges.io
https://br.pinterest.com
https://www.youtube.com/watch?v=RacwEvoTz_Y&list=PLDgemkIT111AzoS1rB61sgMJbsEA4pyD2
https://www.beecrowd.com.br/judge/en/categories
https://www.codewars.com/join?language=javascript



###################################
#######	  Covert for Array  #######
###################################

		var = HTMLCollection
	-> Array.from(var) // Array


###################################
#######	   Method String	#######
###################################

str.trim()
str.trimEnd()
str.trinStart()
str.replace("","")
str.split("")

str.chArt()

Str.split()
str.indexOf()
str.includes()
str.valueOf()


el.innerText // get e set =
el.contentText // get e set = 
el.innerHTML // get e set =
el.outerHTML // get e set =

###################################
#######	    Methos Number   #######
###################################

Math.PI()
Math.floor()
Math.ceil()
Math.random()
Math.round()
Math.abs()
Math.trunc()

num.toFixed(2)

Number.parseInt()
Number.parseFloat()

-> Converte string para Numero
	Number(var) - constructor

Num.toLocaleString("BRL",{style: 'currrency', currency: 'BRL'})




###################################
#######	 Class e Attribute  #######
###################################

el.attributes
el.attributes[0]
el.attribute.class - .value
el.attribute['data-menu']
el.setAttribute("href","http://")
el.removeAttribute("nomeAttr")
el.hasAttribute("attr")

el.classList.add("nomeClass")
el.classList.remove("nomeClass")
el.classList.toggle("nomeClass")

el.classList.contains("nomeClass")
el.contains(child) -> verifica se um elemnto existe dentro do el pai

getComputerStyle(el).css




################################################
#######	 	Transversing e Manipulação   #######
################################################

el.parent
el.parentElement
el.nextElementSibling
el.previusElementSibling
el.replaceChild("novo","filho")
el.removeChild(filho)
elPai.insertBefore("novo","filho")
el.append()
el.prepend()
el.closest()


Propriedades elementos

el.firstChtild
el.firstElemenChild




###################################
#######		Method Array	#######
###################################


Array.shift()
Array.unshift()
Array.pop()
Array.push()

Array.slice()
Array.splice(index, qt)
Array.delete()
Array.chArt()

Array.reverse()
Array.sort()

Array.forEach()
Array.map()
Array.filter()
Array.some()
Array.reduce((acc, item)=>{}, 0)
Array.every()
Array.find()
Array.findIndex()
Array.flat()
Array.flatMap()

Array.join()

Str.split()
Array.indexOf()
Array.includes()

for in
	-> for(prop in obj){}
	
for of
	-> for(item of array){}
	


Object.keys()
Object.values()	
Object.entries()








###################################
#######		Date Object		#######
###################################
var = new Date();

const date1 = new Date('December 17, 1995 03:24:00');
// Sun Dec 17 1995 03:24:00 GMT...

const date2 = new Date('1995-12-17T03:24:00');


var.getTime()
var.getDay() -> seg, ter, qua, qui, sex

var.getDate()
var.getMonth
var.getFullYear()

var.getHours()
var.getMinutes()
var.getSeconds()
var.getMiliseconds


#### Set Date ####
var.getDay() -> seg, ter, qua, qui, sex

var.setDate()
var.setMonth
var.setFullYear()

var.setHours()
var.setMinutes()
var.setSeconds()
var.setMiliseconds





###################################
#######	  URLSeachParams	#######
https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams
###################################

const urlParams = new URLSearchParams(window.location.search);
const myParam = urlParams.get('ufc');
const myParam2 = urlParams.get('myParam');

	URLSeachParams(window.locatin.seach)
	URLSeachParams.get("nomeParams")
	URLSeachParams.toString()
	URLSeachParams.has("")
	URLSeachParams.keys() - interavel
	URLSeachParams.forEach()
	URLSeachParams.delete("")
	URLSeachParams.set("","")
	URLSeachParams.append("","")


###################################
#######		Math Media		#######
###################################

window.matchMedia("('600px')").mathes // true ou false



###################################
#######		Eventos			#######
###################################

No evento você pode pegar o nome da Tag
Pelo atruibuto event.target

event.target.tagName
tagName -> propriedade de evento de clique


popstate = Evento do window
	-> window.addEventListener("popstate",(url) => {
		window.history.pushState(null, null, url)
	   })
   
	->popstate

Pesquisar evento:  hashchange
	
window.history.pushState(null, null, url)
	-> define uma url na barra de endereço




###################################
#######   Mutation Observe  #######
###################################

	function (mutationTarget){
		const verify = mutationtarget[0].target.classList.constains('ativo')
		if(verify){
			ativarAnimacao()
		}
	}

	const elTarget = document.querySelector(".class")
	observer = new MutationObserver(handleMutation);
	observer.observe(elTarget, { attribute: true });








































































































